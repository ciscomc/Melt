/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package melt.View;

import javax.swing.JOptionPane;
import melt.Controller;
import melt.Model.Essay;
import melt.Model.Question;
import melt.Model.Subsection;

/**
 *
 * @author Fuhao
 */
public class EssayPane extends javax.swing.JPanel {

    private Controller controller;
    private Subsection subsectionObject;
    private TreePanel treePane;
    private Essay essayObject;

    /**
     * Creates new form MCQs
     */
    public EssayPane(Controller controller, TreePanel treePane) {
        initComponents();
        this.controller = controller;
        this.treePane = treePane;
        setupComponents();
    }

    public void deleteQuestion() {
        this.controller.deleteQuestion(subsectionObject, essayObject.getId());
        treePane.removeCurrentNode();
    }

    public void setSubsectionObject(Subsection subsection) {
        this.subsectionObject = subsection;
    }

    private boolean isNumeric(String str) {
        return str.matches("\\d+(\\.\\d+)?");
    }

    public void setQuestion(Essay essay) {
        this.essayObject = essay;
        preview();
    }

    private void preview() {

        if (essayObject == null) {
            clear();
        } else {
            clear();
            
            Integer wordlimit = essayObject.getWordLimit();
            if (wordlimit>0) {
                txtWordLimit.setText(wordlimit.toString());
            }     
            
            txtQuestion.setText(essayObject.getQuestionText());
            txtMarks.setText(Double.toString(essayObject.getMark()));
            btnSave.setEnabled(false);
            btnUpdate.setEnabled(true);
        }
    }

    private void clear() {
        txtQuestion.setText("");
        txtWordLimit.setText("");
        txtMarks.setText("");
        btnSave.setEnabled(true);
        btnUpdate.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblFillInstructions = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtQuestion = new javax.swing.JTextArea();
        btnSave = new javax.swing.JButton();
        txtMarks = new javax.swing.JTextField();
        lblMarks = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        lblQuestion = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        txtWordLimit = new javax.swing.JTextField();
        lblMarks1 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(648, 518));

        lblFillInstructions.setFont(new java.awt.Font("MV Boli", 0, 15)); // NOI18N
        lblFillInstructions.setText("Please provide the topic of the essay:");
        lblFillInstructions.setToolTipText("");

        txtQuestion.setColumns(20);
        txtQuestion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtQuestion.setLineWrap(true);
        txtQuestion.setRows(5);
        jScrollPane1.setViewportView(txtQuestion);

        btnSave.setFont(new java.awt.Font("MV Boli", 0, 16)); // NOI18N
        btnSave.setText("Save");
        btnSave.setToolTipText("");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        txtMarks.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtMarks.setText("             ");
        txtMarks.setMinimumSize(new java.awt.Dimension(60, 25));
        txtMarks.setPreferredSize(new java.awt.Dimension(60, 25));
        txtMarks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMarksActionPerformed(evt);
            }
        });

        lblMarks.setFont(new java.awt.Font("MV Boli", 0, 16)); // NOI18N
        lblMarks.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblMarks.setText("Marks:");
        lblMarks.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblTitle.setFont(new java.awt.Font("Snap ITC", 0, 30)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Essay Question");
        lblTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblQuestion.setFont(new java.awt.Font("MV Boli", 0, 15)); // NOI18N
        lblQuestion.setText("Topic:");

        btnUpdate.setFont(new java.awt.Font("MV Boli", 0, 16)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        txtWordLimit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtWordLimit.setText("             ");
        txtWordLimit.setMinimumSize(new java.awt.Dimension(60, 25));
        txtWordLimit.setPreferredSize(new java.awt.Dimension(60, 25));

        lblMarks1.setFont(new java.awt.Font("MV Boli", 0, 16)); // NOI18N
        lblMarks1.setText("Word Limit:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFillInstructions, javax.swing.GroupLayout.DEFAULT_SIZE, 613, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblQuestion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(20, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblMarks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtMarks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblMarks1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtWordLimit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnSave, btnUpdate});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblFillInstructions, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblQuestion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMarks1)
                    .addComponent(txtWordLimit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMarks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMarks))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnUpdate))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnSave, btnUpdate});

    }// </editor-fold>//GEN-END:initComponents

    private void setupComponents() {
    }
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (isValidInput()) {
            Double questionMark = Double.parseDouble(txtMarks.getText());
            Question question;
            if (txtWordLimit.getText().equals("")) {
                question = this.controller.addQuestion(this.subsectionObject, txtQuestion.getText(), questionMark);
            }
            else {
                Integer wordLimit = Integer.parseInt(txtWordLimit.getText());
                question = this.controller.addQuestion(this.subsectionObject, txtQuestion.getText(), questionMark, wordLimit);
            }
            this.treePane.addQuestionNode(question);
            this.controller.updateXmlFile();
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if (isValidInput()) {
            Double questionMark = Double.parseDouble(txtMarks.getText());
            if (txtWordLimit.getText().equals("")) {
                this.controller.updateQuestionDetails(essayObject, txtQuestion.getText(), questionMark);
            } else {
                Integer wordlimit = Integer.parseInt(txtWordLimit.getText());
                this.controller.updateQuestionDetails(essayObject, txtQuestion.getText(), questionMark, wordlimit);
            }
            this.controller.updateXmlFile();
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtMarksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMarksActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMarksActionPerformed

    private boolean isValidInput() {
        String questionText = txtQuestion.getText();
        
        // Make more checks
        if (questionText.equals("")) {
            JOptionPane.showMessageDialog(this, "Please provide a question text.");
            return false;
        } else if (txtMarks.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please provide a mark for the question.");
            return false;
        } else if (!isNumeric(txtMarks.getText())) {
            JOptionPane.showMessageDialog(this, "Please provide a valid number in the marks field.");
            return false;
        } else if (!txtWordLimit.getText().equals("") && !isNumeric(txtWordLimit.getText())) {
            JOptionPane.showMessageDialog(this, "Please provide a valid number in the word limit field.");
            return false;
        }
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFillInstructions;
    private javax.swing.JLabel lblMarks;
    private javax.swing.JLabel lblMarks1;
    private javax.swing.JLabel lblQuestion;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtMarks;
    private javax.swing.JTextArea txtQuestion;
    private javax.swing.JTextField txtWordLimit;
    // End of variables declaration//GEN-END:variables
}
